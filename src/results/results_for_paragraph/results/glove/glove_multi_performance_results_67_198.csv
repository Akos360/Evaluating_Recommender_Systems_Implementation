book_index,paragraph_index,similarity_score,recommended_book,recommended_text
59,203,0.956,KognitÃ­vna veda v kontexte informatickÃ½ch vied,"3.9 ZÃ¡ver Metafora univerzÃ¡lneho darwinizmu rozÅ¡iruje princÃ­py darwinizmu ako univerzÃ¡lneho prÃ­stupu k Å¡tÃºdiu evolÃºcie nielen v biolÃ³gii, ale aj v inÃ½ch vednÃ½ch oblastiach (chÃ©mia, sociÃ¡lne vedy, informatika, umelÃ¡ inteligencia, kognitÃ­vna veda,...). V informatike univerzÃ¡lny darwinizmus poskytuje jedineÄnÃº moÅ¾nosÅ¥ simulÃ¡ciÃ­ darwinovskej evolÃºcie prostriedkami âin silicoâ (t. j. poÄÃ­taÄom), mÃ´Å¾eme konÅ¡tatovaÅ¥ tieto vÅ¡eobecnÃ© zÃ¡very: ï· EvoluÄnÃ© algoritmy tvoria robustnÃ½ optimalizaÄnÃ½ prostriedok pre rÃ´zne kombinatoriÃ¡lne Ãºlohy (napr. z teÃ³rie grafov, operaÄnÃ©ho vÃ½skumu, inÅ¾inierskej praxe nÃ¡vrhu zloÅ¾itÃ½ch zaradenÃ­, a pod.). ï· EvoluÄnÃ© multiagentovÃ© systÃ©my umoÅ¾ÅujÃº poÄÃ­taÄovÃ© simulÃ¡cie sociÃ¡lnych systÃ©mov, emergenciu kooperÃ¡cie a komunikÃ¡cie vypracovaÅ¥ evoluÄnÃ© zÃ¡klady memetiky ako Å¡peciÃ¡lneho prÃ­padu multiagentovÃ½ch systÃ©mov, Å¡tudovaÅ¥ etnickÃ© konflikty v multiagentovÃ½ch systÃ©moch, a pod. ï· UniverzÃ¡lny darwinizmus umoÅ¾Åuje informatike aktÃ­vne interagovaÅ¥ so sociÃ¡lnymi a behaviorÃ¡lnymi vedami. Z ilustraÄnÃ½ch vÃ½poÄtov molekulovej Darwinovej evolÃºcie vyplÃ½vajÃº tieto dÃ´leÅ¾itÃ© vÅ¡eobecnÃ© zÃ¡very pre univerzÃ¡lny darwinizmus: 1. Eigenova teÃ³ria replikÃ¡torov tvorÃ­ dobrÃ½ fenomenologickÃ½ zÃ¡klad molekulovej darwinovej evolÃºcie. Priebehy koncentraÄnÃ½ch profilov zÃ­skanÃ½ch rieÅ¡enÃ­m diferenciÃ¡lnych rovnÃ­c popisujÃºcich dynamiku chemostatu replikÃ¡torov, ktorÃ© boli zÃ­skanÃ© vhodnÃ½m vÃ½berom rÃ½chlostnÃ½ch konÅ¡tÃ¡nt, poskytujÃº priebehy koncentrÃ¡ciÃ­, ktorÃ© sÃº veÄ¾mi podobnÃ© experimentÃ¡lne pozorovanÃ½m [47] (pozri Obr. 3.14). 2. DarwinovskÃ¡ evolÃºcia prebieha ako MonodovskÃ¡ [42] vzÃ¡jomnÃ¡ hra medzi nÃ¡hodou a nutnosÅ¥ou, medzi deterministickÃ½m a stochastickÃ½m charakterom, ktorÃ© sÃº jej integrÃ¡lna sÃºÄasÅ¥. EvolÃºcia obsahuje Äasti, ktorÃ© sÃº plne deterministickÃ© â plne predpovedateÄ¾nÃ© (napr. zobrazenie genotypu na fenotyp), a taktieÅ¾ aj stochastickÃ© Äasti, ktorÃ© nemÃ´Å¾u byÅ¥ dobre predpovedateÄ¾nÃ©, mÃ´Å¾e hovoriÅ¥ len o ich Å¡tatistickÃ½ch charakteristikÃ¡ch (napr. mutÃ¡cie). V tejto sÃºvislosti sa obÄas pouÅ¾Ã­va terminolÃ³gia zavedenÃ¡ americkÃ½m informatikom a zakladateÄ¾om umelÃ©ho Å¾ivota Christopherom Langtonom âna hrane chaosuâ (angl. on the edge of chaos). PouÅ¾Ã­va sa termÃ­n âevolÃºcia prebieha na hrane chaosuâ, ktorÃ½ sa interpretuje takto: HlavnÃ¡ hnacia sila inovÃ¡ciÃ­ v evolÃºcii sÃº mutÃ¡cie, preto by sme sa mohli domnievaÅ¥, Å¾e ÄÃ­m ÄastejÅ¡Ã­ je vÃ½skyt mutÃ¡ciÃ­ pri reprodukÄnom procese, tÃ½m vÃ¤ÄÅ¡ia je pravdepodobnosÅ¥ vÃ½skytu inovÃ¡cie. AvÅ¡ak, ak miera mutÃ¡ciÃ­ prekroÄÃ­ urÄitÃº kritickÃº hodnotu, efektÃ­vnosÅ¥ evolÃºcie sa zniÄÃ­ a stÃ¡va sa z nej nieÄo Äo mÃ´Å¾eme nazvaÅ¥ âslepÃ© hÄ¾adanieâ, bez vplyvu stratÃ©gie prirodzenÃ©ho vÃ½beru, ktorÃ½ je schopnÃ½ efektÃ­vne selektovaÅ¥ pozitÃ­vne mutÃ¡cie. V opaÄnom prÃ­pade, ak miera vÃ½skytu mutÃ¡ciÃ­ je veÄ¾mi malÃ¡, evolÃºcia sa v podstate zastavÃ­ a zamrzne v aktuÃ¡lnom stave. Preto mÃ´Å¾eme povedaÅ¥, Å¾e frekvencia vÃ½skytu mutÃ¡ciÃ­ musÃ­ byÅ¥ dostatoÄne veÄ¾kÃ¡, ale zase nie veÄ¾mi, aby sa evolÃºcia nerozpadla, hovorÃ­me, Å¾e musÃ­ byÅ¥ na hrane chaosu. 3. Koncepcia Sewalla Wrighta [51] povrchu funkcie fitnes mÃ´Å¾e byÅ¥ povaÅ¾ovanÃ¡ ako jeden z najvÃ¤ÄÅ¡Ã­ch Ãºspechov Darwinovej evoluÄnej teÃ³rie a taktieÅ¾ aj ako jeden zo zdrojov jej univerzÃ¡lneho charakteru. TÃ¡to koncepcia mÃ¡ veÄ¾kÃ½ heuristickÃ½ vÃ½znam v tom, Å¾e Darwinova evolÃºcia mÃ´Å¾e byÅ¥ interpretovanÃ¡ ako Å¡peciÃ¡lny druh evoluÄnÃ©ho algoritmu [15,25,37], ktorÃ½ je schopnÃ½ rieÅ¡iÅ¥ extrÃ©mne komplikovanÃ© kombinatoriÃ¡lne optimalizaÄnÃ© problÃ©my. V prvej sekcii bol formulovanÃ½ Wrightov nÃ¡zor na evolÃºciu ako na optimalizaÄnÃ½ proces na povrchu funkcie fitnes (pozri Obr. 3.2). V tejto sÃºvislosti Wright poznamenal, Å¾e jeden z hlavnÃ½ch cieÄ¾ov teÃ³rie evolÃºcie je popÃ­saÅ¥ mechanizmy, ktorÃ© umoÅ¾ÅujÃº evolÃºcii nÃ¡jsÅ¥ âspojitÃ© cestyâ z jednÃ©ho vrcholu do druhÃ©ho vrcholu na povrchu fitnes funkcie nato, aby evolÃºcia bola"
94,174,0.956,Sprievodca svetom vedeckÃ©ho publikovania,"publikovania. PublikÃ¡ciou Open Science Training Handbook propaguje efektÃ­vne praktiky Å¡Ã­renia otvorenÃ©ho prÃ­stupu (FOSTER 2018). Na poli vedeckej komunikÃ¡cie eÅ¡te aj dnes prevlÃ¡dajÃº tradiÄne publikovanÃ© (spoplatnenÃ©) ÄlÃ¡nky, podiel ÄlÃ¡nkov s otvorenÃ½m prÃ­stupom vÅ¡ak stÃ¡le rastie. VÅ¡eobecnÃ¡ prospeÅ¡nosÅ¥ otvorenÃ©ho prÃ­stupu je znÃ¡ma â kniÅ¾nice, univerzity a vÅ¡etci tÃ­, ktorÃ­ museli za prÃ­stup k vÃ½sledkom vÃ½skumu platiÅ¥, uÅ¡etria peniaze a Äas, ktorÃ½ museli venovaÅ¥ hÄ¾adaniu nedostupnÃ½ch ÄlÃ¡nkov. Poznatky sa dostanÃº k vÃ¤ÄÅ¡iemu mnoÅ¾stvu prijÃ­mateÄ¾ov, takÅ¾e vzrastie spoloÄenskÃ½ dopad vÃ½skumu, informovanosÅ¥ verejnosti, aj scientometrickÃ© parametre publikÃ¡ciÃ­. Vedci sa nemusia vzdÃ¡vaÅ¥ autorskÃ½ch prÃ¡v (pouÅ¾Ã­vajÃº licenciu Creative Commons), takÅ¾e majÃº nad svojou prÃ¡cou vÃ¤ÄÅ¡iu kontrolu. OtvorenÃ½ prÃ­stup vÅ¡ak stÃ¡le ÄelÃ­ veÄ¾kÃ½m vÃ½zvam. Prvou z nich je identifikÃ¡cia funkÄnÃ©ho modelu financovania. Druhou a nemenej dÃ´leÅ¾itou je udrÅ¾anie (alebo posilnenie) mechanizmov kontroly kvality na Ãºrovni ÄlÃ¡nkov aj na Ãºrovni Äasopisov."
240,462,0.952,PROGRAMOVANIE V JAZYKU C V RIEÅ ENÃCH PRÃKLADOCH 1,"budÃº uvedenÃ© ako vÃ½stupnÃ© argumenty (aby sme do nich mohli zapisovaÅ¥) ale budeme ich pouÅ¾Ã­vaÅ¥ aj ako vstupnÃ© argumenty (budeme z nich hodnoty aj ÄÃ­taÅ¥). V prÃ­pade, Å¾e by ÄÃ­slo, ktorÃ© do poÄ¾a vkladÃ¡me, malo presiahnuÅ¥ dÄºÅ¾ku poÄ¾a (n+1 > kapacita), tak pole zvÃ¤ÄÅ¡Ã­me funkciou realloc(). V tomto rieÅ¡enÃ­ demonÅ¡trujeme zvÃ¤ÄÅ¡enie poÄ¾a o konÅ¡tantnÃ½ prÃ­rastok (o 10 prvkov) lebo predpokladÃ¡me, Å¾e funkcia sa bude v programe volaÅ¥ len sporadicky. Potom ako funkcia vloz() zaruÄÃ­, Å¾e pole mÃ¡ dostatoÄnÃº kapacitu na pridanie ÄalÅ¡ieho prvku je potrebnÃ© nÃ¡jsÅ¥ umiestnenie novÃ©ho prvku vzhÄ¾adom na usporiadanie prvkov v poli. Ak sprÃ¡vne miesto nÃ¡jdeme, je moÅ¾nÃ©, Å¾e prvky, ktorÃ© sa nachÃ¡dzajÃº za tÃ½mto miestom budeme musieÅ¥ posunÃºÅ¥ na nasledujÃºce miesto v poli, ÄÃ­m vytvorÃ­me miesto pre novÃ½ prvok, do ktorÃ©ho priradÃ­me novÃº hodnotu. PosÃºvanie prvkov o jedno miesto Äalej mÃ´Å¾eme realizovaÅ¥ v cykle sÃºÄasne s hÄ¾adanÃ­m sprÃ¡vneho miesta pre pridÃ¡vanÃ½ prvok tak, Å¾e prvky poÄ¾a budeme prechÃ¡dzaÅ¥ (i) od konca (poslednÃ©ho prvku) smerom na zaÄiatok (prvÃ½ prvok): ak hodnota i-teho prvku je menÅ¡ia ako pridÃ¡vanÃ¡ hodnota (cislo), tak vieme Å¾e potom ako i-tÃ½ prvok presunieme na i+1 miesto (a[i+1] = a[i]), tak na uvoÄ¾nenÃ© i-te miesto vloÅ¾Ã­me hodnotu cislo, inak pokraÄujeme Äalej pre prvok i-1 (ktorÃ½ presunieme na i-te miesto atÄ). VÃ½slednÃ¡ implementÃ¡cia funkcie vloz() podÄ¾a uvedenÃ©ho opisu:"
205,126,0.952,"Weboveda: vÃ½chodiskÃ¡, predmet, metÃ³dy","Politika vÃ½beru stanovuje, ktorÃ© strÃ¡nky mÃ¡ preliezaÄ sÅ¥ahovaÅ¥. PodÄ¾a prieskumu z roku 2005 [4] dokonca aj rozsiahle preliezaÄe zindexujÃº iba 40-70% celÃ©ho indexovateÄ¾nÃ©ho webu. Preto je veÄ¾mi dÃ´leÅ¾itÃ©, aby prelezenÃ¡ ÄasÅ¥ webu obsahovala tie najrelevantnejÅ¡ie strÃ¡nky a nie len nejakÃº nÃ¡hodnÃº vzorku webu. NiektorÃ© strÃ¡nky mÃ´Å¾u tieÅ¾ obsahovaÅ¥ tzv. preliezacie pasce, ktorÃ© predstavujÃº nekoneÄnÃ½ zoznam dynamicky generovanÃ½ch URL adries. Preto je dÃ´leÅ¾itÃ©, aby preliezaÄ reÅ¡pektoval robotickÃ½ protokol, ktorÃ½ uvÃ¡dza, akÃº ÄasÅ¥ sÃ­dla je moÅ¾nÃ© preliezaÅ¥. Politika znovunavÅ¡tevovania stanovuje, ako Äasto kontrolovaÅ¥ zmeny na strÃ¡nkach. PreliezaÄe pouÅ¾Ã­vajÃº viacerÃ© metriky, podÄ¾a ktorÃ½ch sa rozhodujÃº, kedy znovu navÅ¡tÃ­viÅ¥ nejakÃº webovÃº strÃ¡nku. NajÄastejÅ¡ie pouÅ¾Ã­vanÃ© metriky sÃº ÄerstvosÅ¥ a vek [7]. ÄerstvosÅ¥ je jednoduchÃ¡ binÃ¡rna metrika, ktorÃ¡ indikuje, Äi sa lokÃ¡lna kÃ³pia strÃ¡nky zhoduje s originÃ¡lom, alebo nie. ÄerstvosÅ¥ webovej strÃ¡nky s v Äase t je definovanÃ¡ ako:"
94,136,0.951,Sprievodca svetom vedeckÃ©ho publikovania,"v medzinÃ¡rodnÃ½ch rebrÃ­Äkoch. Ak univerzita disponuje majetkovÃ½mi prÃ¡vami na diela svojich zamestnancov, potenciÃ¡lnou vÃ½hodou je moÅ¾nosÅ¥ zÃ­skaÅ¥ za ne drobnÃ© finanÄnÃ© odmeny za kniÅ¾niÄnÃ© vÃ½poÅ¾iÄky a reprografickÃ© sluÅ¾by od organizÃ¡ciÃ­ zastupujÃºcich prÃ¡va autorov (napr. LITA60). 2.) dielo na objednÃ¡vku (Â§ 91) â vytvorenÃ© na zÃ¡klade zmluvy o dielo alebo v rÃ¡mci verejnej sÃºÅ¥aÅ¾e. Ak autor vytvoril dielo na objednÃ¡vku, udelil objednÃ¡vateÄ¾ovi sÃºhlas s pouÅ¾itÃ­m diela (ale len na dohodnutÃ½ ÃºÄel â pouÅ¾itie diela na inÃ½ ÃºÄel vyÅ¾aduje sÃºhlas autora). Autor smie dielo sÃ¡m pouÅ¾iÅ¥ a udeliÅ¥ sÃºhlas na jeho pouÅ¾itie, ak to neodporuje oprÃ¡vnenÃ½m zÃ¡ujmom objednÃ¡vateÄ¾a. Ak ide o poÄÃ­taÄovÃ½ program, databÃ¡zu alebo kartografickÃ© dielo, mÃ¡ objednÃ¡vateÄ¾ takÃ© prÃ¡va ako zamestnÃ¡vateÄ¾ pri zamestnaneckom diele. 3.) spoloÄnÃ© dielo (Â§ 92) â dielo vytvorenÃ© z iniciatÃ­vy a pod vedenÃ­m konkrÃ©tnej osoby. TÃ¡to osoba mÃ¡ potom podobnÃ© prÃ¡va ako zamestnÃ¡vateÄ¾ v prÃ­pade zamestnaneckÃ©ho diela. TvorivÃ© vklady jednotlivÃ½ch autorov nie je moÅ¾nÃ© samostatne pouÅ¾iÅ¥. 4.) Å¡kolskÃ© dielo (Â§ 93) â dielo vytvorenÃ© Å¾iakom alebo Å¡tudentom za ÃºÄelom plnenia Å¡kolskÃ½ch povinnostÃ­. Autor je povinnÃ½ uzavrieÅ¥ so Å¡kolou licenÄnÃº zmluvu na nekomerÄnÃ© vyuÅ¾itie diela. Ak autor zÃ­ska za dielo odmenu, Å¡kola z nej mÃ´Å¾e Å¾iadaÅ¥ nÃ¡hradu nÃ¡kladov vynaloÅ¾enÃ½ch na vytvorenie diela. Autorstva sa nemoÅ¾no vzdaÅ¥, ale s autorskÃ½mi prÃ¡vami moÅ¾no rÃ´zne nakladaÅ¥ â rozhodovaÅ¥ o spÃ´sobe pouÅ¾Ã­vania diela napr. udelenÃ­m licencie (povolenia na doÄasnÃ© pouÅ¾Ã­vanie za vopred stanovenÃ½ch podmienok). Licencia mÃ´Å¾e byÅ¥ vÃ½hradnÃ¡, alebo nevÃ½hradnÃ¡. Pri vÃ½hradnom udelenÃ­ licencie nemÃ´Å¾e dielo prÃ­sluÅ¡nÃ½m spÃ´sobom pouÅ¾Ã­vaÅ¥ ani sÃ¡m autor. Ak to v zmluve nie je stanovenÃ©, licencia sa povaÅ¾uje za nevÃ½hradnÃº. VydavateÄ¾skÃ© licencie zvyÄajne bÃ½vajÃº vÃ½hradnÃ©, aby vydavateÄ¾ovi neunikal zisk v prÃ­pade, Å¾e by verejnosÅ¥ mala Å¡ancu moÅ¾nosÅ¥ dostaÅ¥ sa k dielu z inÃ½ch zdrojov (v slovenskom Autorskom zÃ¡kone to neplatÃ­ pre dielo vydanÃ© v periodickej publikÃ¡cii). V otvorenom publikovanÃ­ sa medzinÃ¡rodne pouÅ¾Ã­vajÃº verejnÃ© licencie, najÄastejÅ¡ie typu Creative Commons61, v sÃºÄasnosti vo verzii Creative Commons 4.0 (Creative Commons 2017). Od roku 2013 sÃº verejnÃ© licencie upravenÃ© aj v slovenskom Autorskom zÃ¡kone (Â§76 zÃ¡kona Ä. 185/2015 Z. z.) ako bezodplatnÃ©, vÅ¾dy nevÃ½hradnÃ© licencie, udeÄ¾ujÃºce sÃºhlas na pouÅ¾itie diela vopred neurÄenÃ½m osobÃ¡m. UmoÅ¾ÅujÃº teda komukoÄ¾vek legÃ¡lny, voÄ¾nÃ½ prÃ­stup k dielu, bez obmedzenia prÃ¡v autora. Existuje celÃ½ rad typov licenciÃ­ Creative Commons, ktorÃ© rÃ´zne prÃ­sne upravujÃº moÅ¾nosti vyuÅ¾itia diela. Licencia CC BY (attribution) umoÅ¾Åuje pouÅ¾Ã­vateÄ¾ovi nakladaÅ¥ s dielom slobodne (prezeraÅ¥ si ho, rozmnoÅ¾ovaÅ¥, verejne Å¡Ã­riÅ¥, prekladaÅ¥, vytvÃ¡raÅ¥ odvodeniny, dokonca aj na komerÄnÃ© ÃºÄely), jedinou podmienkou je uvedenie mena autora. Skratka NC (non-commercial, naprÃ­klad CC BY-NC) pridÃ¡va podmienku vyuÅ¾Ã­vaÅ¥ dielo iba 60 http://www.lita.sk/ 61 https://creativecommons.org/licenses/by/4.0/"
135,354,0.951,Å tÃºdie vybranÃ½ch tÃ©m programovÃ½ch a informaÄnÃ½ch 4,"5.2.1 MetamodelovacÃ­ jazyk zaloÅ¾enÃ½ na roliach PrÃ¡ca [10] predstavuje jazyk urenÃ½ na Å¡pecifikÃ¡ciu vzorov: MetamodelovacÃ­ jazyk zaloÅ¾enÃ½ na roliach (Role Based Metamodeling Language â RBML). RBML umoÅ¾uje autorom Å¡pecifikova nÃ¡vrhovÃ© vzory z viacerÃ½ch perspektÃ­v: statickej Å¡truktÃºry, interakcie, stavovÃ©ho sprÃ¡vania sa. RBML pouÅ¾Ã­va na Å¡pecifikÃ¡ciu vlastnostÃ­ vzorov vizuÃ¡lnu notÃ¡ciu zaloÅ¾enÃº na UML [33] a textovÃ© obmedzenia zaznamenanÃ© v jazyku OCL [26]. Ide o Å¡pecifikanÃ½ jazyk opisujÃºci skupiny UML modelov. SamotnÃ¡ Å¡pecifikÃ¡cia vzorov je zaloÅ¾enÃ¡ na bÃ¡ze rolÃ­, ktorÃ© sÃº asociovanÃ© s UML metatriedami. Role Å¡pecifikujÃº vlastnosti, ktorÃ© musia sp a elementy modelu hrajÃºce danÃº rolu. To znamenÃ¡, Å¾e model, ktorÃ½ zodpovedÃ¡ Å¡pecifikÃ¡ciÃ­ vzoru, pozostÃ¡va z elementov hrajÃºcich role tejto Å¡pecifikÃ¡cie. MÃ´Å¾e obsahova aj inÃ© aplikane Å¡pecifickÃ© elementy, ak sa tÃ½m nedostÃ¡va do konfliktu s metamodelovou Å¡pecifikÃ¡ciou vzoru. ZÃ¡kladnÃ½m modelom RBML je StatickÃ¡ Å¡pecifikÃ¡cia vzoru (Static Pattern Specification â SPS) predstavujÃºca obmedzenia UML metamodelu, ktorÃ© spresujÃº priestor rieÅ¡enia vzoru zo Å¡trukturÃ¡lneho aspektu. SPS pozostÃ¡va z klasifikÃ¡torov (classifier) a vzahov (relationship), ktorÃ© vychÃ¡dzajÃº z metatried Classifier a Relationship UML metamodelu. Rola definovanÃ¡ v rÃ¡mci SPS mÃ´Å¾e by asociovanÃ¡ s obmedzeniami definovanÃ½mi pomocou OCL. PrÃ­klad SPS Å¡pecifikÃ¡cie vzoru Visitor sa nachÃ¡dza na obrÃ¡zku 5-9. Na zachytenie dynamickÃ©ho sprÃ¡vania sa ÃºastnÃ­kov vzoru slÃºÅ¾i InteraknÃ¡ Å¡pecifikÃ¡cia vzoru (Interaction Pattern Specifications â IPS). IPS pozostÃ¡va z interaknej role, ktorÃ¡ je Å¡pecializÃ¡ciou triedy Interaction UML metamodelu. InteraknÃ¡ rola je Å¡truktÃºrou lifeline a sprÃ¡vy (message), ktorÃ© sÃº zaloÅ¾enÃ© na metatriedach Lifeline a Message UML metamodelu. Z vizuÃ¡lneho hadiska sa IPS je obdobou sekvennÃ©ho diagramu UML. Na opis stavovÃ©ho sprÃ¡vania sa ÃºastnÃ­kov vzoru RBML definuje StavovÃº Å¡pecifikÃ¡ciu vzoru (StateMachine Pattern Specifications â SMPS), ktorÃ¡ vychÃ¡dza zo stavovÃ©ho diagramu UML."
129,12,0.949,Sprievodca licenciami Creative Commons,"Kedy je moÅ¾nÃ© pouÅ¾iÅ¥ dielo bez sÃºhlasu autora? Bez sÃºhlasu autora moÅ¾no dielo pouÅ¾iÅ¥ najmÃ¤ v prÃ­pade, ak ide o pouÅ¾itie na zÃ¡klade zÃ¡konnÃ½ch licenciÃ­ (Â§ 34-57), ktorÃ© predstavujÃº vÃ½nimky a obmedzenia z prÃ¡va autora na udelenie sÃºhlasu na pouÅ¾itie diela. Medzi takÃ©to vÃ½nimky a obmedzenia patrÃ­ napr.: citÃ¡cia diela (Â§ 37), karikatÃºra, parÃ³dia, pastiÅ¡, pouÅ¾itie diela na informaÄnÃ© ÃºÄely, pouÅ¾itie diela na vyuÄovacie ÃºÄely a pri vÃ½skume a inÃ©. Bez sÃºhlasu autora je tieÅ¾ moÅ¾nÃ© pouÅ¾iÅ¥ voÄ¾nÃ© dielo (Â§ 9). Bez sÃºhlasu autora moÅ¾no pouÅ¾iÅ¥ dielo aj ÄalÅ¡Ã­m prevodom vlastnÃ­ckeho prÃ¡va (napr. predajom a darovanÃ­m) po tom, ako doÅ¡lo k vyÄerpaniu tohto prÃ¡va autora. VÄaka tomu mÃ´Å¾e v EÃ fungovaÅ¥ sekundÃ¡rny trh, naprÃ­klad antikvariÃ¡ty. TÃ¡to vÃ½nimka sa vÅ¡ak nevzÅ¥ahuje na e-knihy a inÃ© digitÃ¡lne rozmnoÅ¾eniny okrem poÄÃ­taÄovÃ½ch programov. Ako mÃ´Å¾e autor udeliÅ¥ inej osobe sÃºhlas na pouÅ¾itie diela? Pred pouÅ¾itÃ­m diela osobou odliÅ¡nou od autora je potrebnÃ© zÃ­skaÅ¥ na jeho pouÅ¾itie sÃºhlas autora (pokiaÄ¾ nie je moÅ¾nÃ© vyuÅ¾iÅ¥ tzv. zÃ¡konnÃº licenciu). SÃºhlas autora na pouÅ¾itie diela sa udeÄ¾uje licenÄnou zmluvou (Â§ 65 a nasl.). LicenÄnÃ¡ zmluva stanovuje predovÅ¡etkÃ½m spÃ´sob pouÅ¾itia diela, rozsah licencie, Äas, na ktorÃ½ autor licenciu udeÄ¾uje, alebo spÃ´sob jeho urÄenia a odmenu alebo spÃ´sob jej urÄenia, ak sa autor s nadobÃºdateÄ¾om nedohodol na bezodplatnom poskytnutÃ­ licencie. AutorskÃ½ zÃ¡kon vo svojich ustanoveniach zÃ¡roveÅ urÄuje domnienky, ktorÃ© platia v prÃ­pade, ak licenÄnÃ¡ zmluva neobsahuje uvedenÃ© nÃ¡leÅ¾itosti. VÃ½hradnÃ¡ licencia musÃ­ maÅ¥ pÃ­somnÃº formu (Ak autor udelil vÃ½hradnÃº licenciu, nesmie udeliÅ¥ tretej osobe licenciu na spÃ´sob pouÅ¾itia diela udelenÃ½ vÃ½hradnou licenciou a je povinnÃ½, ak nie je v licenÄnej zmluve dohodnutÃ© inak, sÃ¡m sa zdrÅ¾aÅ¥ pouÅ¾itia diela spÃ´sobom, na ktorÃ½ udelil vÃ½hradnÃº licenciu). LicenÄnÃ¡ zmluva nemusÃ­ byÅ¥ pÃ­somnÃ¡, ak sa uzatvÃ¡ra ako nevÃ½hradnÃ¡. Autor mÃ´Å¾e ponÃºknuÅ¥ udelenie licencie aj jednostrannÃ½m prejavom vÃ´le smerujÃºcim voÄi neurÄitÃ½m osobÃ¡m (Â§ 76 VerejnÃ¡ licencia). Licencia je platne udelenÃ¡ v okamihu, keÄ sa nadobÃºdateÄ¾ podÄ¾a nej zachovÃ¡ (urÄitÃ© konanie nadobÃºdateÄ¾a licencie, z ktorÃ©ho moÅ¾no vyvodiÅ¥ jeho sÃºhlas s podmienkami licencie aj bez"
43,300,0.948,Objektovo orientovanÃ© programovanie v C++,"Pre eÅ¡te vÃ¤ÄÅ¡iu nÃ¡zornosÅ¥ je princÃ­p kopÃ­rovacieho konÅ¡truktora ilustrovanÃ½ na obr. 7.1. Ide o vÅ¡eobecnÃ½ prÃ­klad objektu s tromi Ãºdajmi, z ktorÃ½ch jeden je smernÃ­k pouÅ¾itÃ½ na dynamickÃº alokÃ¡ciu jednorozmernÃ©ho poÄ¾a. VidÃ­me, Å¾e jedinÃ©, ÄÃ­m sa objekt a jeho kÃ³pia vytvorenÃ¡ pomocou kopÃ­rovacieho konÅ¡truktora lÃ­Å¡ia, je miesto v pamÃ¤ti, kde je toto pole uloÅ¾enÃ©. A presne tak to mÃ¡ byÅ¥."
393,180,0.948,Å tÃºdie vybranÃ½ch tÃ©m programovÃ½ch a informaÄnÃ½ch 2,"4 INFRAÅ TRUKTÃRA PRE WEBOVÃ INTELIGENTNÃ SYSTÃMY RÃ½chlym rozÅ¡Ã­renÃ­m osobnÃ½ch poÄÃ­taÄov za poslednÃ½ch pÃ¤tnÃ¡sÅ¥ rokov sa radikÃ¡lne zmenil svet nejednÃ©ho z nÃ¡s. To, Äo kedysi bolo nepredstaviteÄ¾nÃ©, ako naprÃ­klad okamÅ¾itÃ½ prÃ­stup k terabajtom dÃ¡t a ich prehÄ¾adÃ¡vanie za niekoÄ¾ko sekÃºnd, je dnes realitou. MÃ¡loktorÃ½ pouÅ¾Ã­vateÄ¾ si vÅ¡ak uvedomuje, Å¾e za tieto sluÅ¾by vÄaÄÃ­ nielen âhmatateÄ¾nÃ©muâ hardvÃ©ru, ale najme sofistikovanÃ½m algoritmom softvÃ©ru. ProblÃ©m minulosti s nedostatkom informÃ¡ciÃ­, sa postupom Äasu pretransformoval na problÃ©m vyhÄ¾adÃ¡vania informÃ¡ciÃ­ medzi obrovskÃ½m mnoÅ¾stvom dÃ¡t, ktorÃ© mÃ¡me v sÃºÄasnosti k dispozÃ­cii. NÃ¡jdenÃ© informÃ¡cie veÄ¾mi Äasto nie sÃº zaujÃ­mavÃ© len pre jednÃ©ho koncovÃ©ho pouÅ¾Ã­vateÄ¾a, ale aj mnoÅ¾stvo pouÅ¾Ã­vateÄ¾ov v jeho okolÃ­ (informÃ¡cie o prÃ¡ci, zÃ¡bave a podobne). Tieto informÃ¡cie mÃ¡ preto vo vÃ¤ÄÅ¡ine prÃ­padov zmysel âposunÃºÅ¥â bliÅ¾Å¡ie k pouÅ¾Ã­vateÄ¾om. PrÃ¡ve na to vyuÅ¾Ã­vame jednu z najÄastejÅ¡ie vyuÅ¾Ã­vanÃ½ch âneviditeÄ¾nÃ½châ sluÅ¾ieb â sluÅ¾bu predprÃ­pravy, a to na takmer kaÅ¾dej Ãºrovni vyuÅ¾itia Å¡irokÃ©ho spektra vÃ½poÄtovÃ½ch prostriedkov. Algoritmy na vyhÄ¾adÃ¡vanie a predprÃ­pravu patria medzi najvyuÅ¾Ã­vanejÅ¡ie algoritmy vo vÅ¡eobecnosti, prÃ¡ve preto je vhodnÃ© im venovaÅ¥ aj primeranÃº pozornosÅ¥."
